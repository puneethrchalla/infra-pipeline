#!/bin/bash

source ./util/common-functions.sh
source ./util/core-functions.sh

# We want to know when this script started and ended.
SCRIPT_STARTED=$(date +%s)

# Parse the other arguments
parse_arguments ${OTHER_PARAMETERS}

# Depending on the layer that is being processed, there may be custom parameters required.
EXTRA_PARAMETERS=""
SCRIPT_EXIT_CODE=0

# Check to see if there were variable overrides.
if [ "$VAR_OVERRIDE" != "" ]; then
	LAYER_VAR_OVERRIDE="--var-override $VAR_OVERRIDE"
fi

# Provide the Environment
if [ "$ENV" != "" ]; then
	ENVIRON="--env $ENV"
fi

# Provide the AWS Region
if [ "$REGION" != "" ]; then
	AWS_REG="--region $REGION"
fi

# Check to see if anything needed to be tainted.
if [ "$TAINT" != "" ]; then
	LAYER_TAINT="--taint $TAINT"
fi
	

# Check to see if anything needed to be removed from state.
if [ "$RM_STATE" != "" ]; then
	LAYER_RM_STATE="--rm-state $RM_STATE"
fi

# Pass DR Region (applicable only during FailBack process)
if [ "$DR_AWS_REG" != "" ]; then
	DR_REG="--dr-region $DR_AWS_REG"
fi

# Is this for DR?
DISAS_RECOVERY=""

if [[ "$DR" == "true" ]]; then
	DISAS_RECOVERY="--DR"
	TFVARS="${ENV}-dr" 
else
	TFVARS="${ENV}-primary"
fi

# Is this is failover step?
if [[ "$FAILBACK" == "true" ]]; then
	RECOVERY="--failback"
fi

# Is this a dry run?
LAYER_DRYRUN=""

if [[ "$DRY_RUN" == "true" ]]; then
	LAYER_DRYRUN="--dryrun"
fi

# Make state file backups?
LAYER_BACK_UP_STATE_FILE=""
		
if [[ "$BACK_UP_STATE_FILE" == "true" ]]; then
	LAYER_BACK_UP_STATE_FILE="--back-up-state-file"
fi

echo "Executing ${LAYER}..."

# Copy Global Vars file to layer's directory
cp ./global-vars.tf ./layer_$LAYER/global.tf

# Change directory to the layer's directory, and run the layer.
pushd "layer_$LAYER" > /dev/null
		
set +e
		
../layer-run.sh $LAYER "--${MODE}" --vars "$TFVARS" $ENVIRON $AWS_PROF $DISAS_RECOVERY \
$LAYER_BACK_UP_STATE_FILE $AWS_REG $DR_REG $LAYER_RM_STATE $LAYER_TAINT $LAYER_DRYRUN \
$LAYER_VAR_OVERRIDE $RECOVERY $EXTRA_PARAMETERS

SCRIPT_EXIT_CODE=$?
		
set -e
		
# If we are doing a true terminate and the terminate finished cleanly, then do some cleanup.
if [[ "${MODE}" == "terminate" && "${DRY_RUN}" == "false" && "$SCRIPT_EXIT_CODE" == "0" ]]; then
	clean_up_terraform_state_for_layer "$LAYER"
fi

popd > /dev/null

if [[ "$SCRIPT_EXIT_CODE" != 0 ]]; then
	exit $SCRIPT_EXIT_CODE
fi

# Write out the result of this layer to our log file.
SCRIPT_ENDED=$(date +%s)
